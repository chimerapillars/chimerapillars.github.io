{"version":3,"sources":["../node_modules/secp256k1/lib/index.js","../node_modules/secp256k1/lib/assert.js","../node_modules/secp256k1/lib/der.js","../node_modules/secp256k1/lib/elliptic/index.js","../node_modules/ethereumjs-abi/lib/index.js","../../src/index.ts","../../../src/secp256k1v3-lib/index.ts","../../../src/secp256k1v3-lib/der.ts","../../src/constants.ts","../../src/account.ts","../../src/signature.ts","../../src/object.ts","../node_modules/secp256k1/elliptic.js","../node_modules/ethereumjs-abi/node_modules/ethjs-util/lib/index.js","../../src/bytes.ts","../node_modules/bip66/index.js","../node_modules/ethjs-util/lib/index.js","../node_modules/ethereumjs-abi/index.js","../../src/secp256k1v3-adapter.ts","../../src/hash.ts"],"names":["assert","require","der","messages","initCompressedValue","value","defaultValue","undefined","isBoolean","COMPRESSED_TYPE_INVALID","module","exports","secp256k1","privateKeyVerify","privateKey","isBuffer","EC_PRIVATE_KEY_TYPE_INVALID","length","privateKeyExport","compressed","isBufferLength","EC_PRIVATE_KEY_LENGTH_INVALID","publicKey","privateKeyImport","Error","EC_PRIVATE_KEY_IMPORT_DER_FAIL","privateKeyNegate","privateKeyModInverse","privateKeyTweakAdd","tweak","TWEAK_TYPE_INVALID","TWEAK_LENGTH_INVALID","privateKeyTweakMul","publicKeyCreate","publicKeyConvert","EC_PUBLIC_KEY_TYPE_INVALID","isBufferLength2","EC_PUBLIC_KEY_LENGTH_INVALID","publicKeyVerify","publicKeyTweakAdd","publicKeyTweakMul","publicKeyCombine","publicKeys","isArray","EC_PUBLIC_KEYS_TYPE_INVALID","isLengthGTZero","EC_PUBLIC_KEYS_LENGTH_INVALID","i","signatureNormalize","signature","ECDSA_SIGNATURE_TYPE_INVALID","ECDSA_SIGNATURE_LENGTH_INVALID","signatureExport","sigObj","signatureImport","sig","ECDSA_SIGNATURE_PARSE_DER_FAIL","signatureImportLax","sign","message","options","MSG32_TYPE_INVALID","MSG32_LENGTH_INVALID","data","noncefn","isObject","OPTIONS_TYPE_INVALID","OPTIONS_DATA_TYPE_INVALID","OPTIONS_DATA_LENGTH_INVALID","isFunction","OPTIONS_NONCEFN_TYPE_INVALID","verify","recover","recovery","isNumber","RECOVERY_ID_TYPE_INVALID","isNumberInInterval","RECOVERY_ID_VALUE_INVALID","ecdh","ecdhUnsafe","toString","Object","prototype","Array","TypeError","call","Buffer","buffer","RangeError","length1","length2","number","x","y","bip66","EC_PRIVKEY_EXPORT_DER_COMPRESSED","from","EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED","result","copy","index","lenb","len","slice","r","concat","lenR","posR","s","lenS","posS","encode","alloc","decode","err","lenbyte","rlen","rindex","slen","sindex","rvalue","svalue","createHash","BN","EC","ec","ecparams","curve","loadPublicKey","first","xBuffer","cmp","p","toRed","red","redSqr","redIMul","redIAdd","b","redSqrt","isOdd","redNeg","keyPair","pub","loadCompressedPublicKey","yBuffer","x3","redISub","isZero","loadUncompressedPublicKey","bn","n","d","EC_PRIVATE_KEY_EXPORT_DER_FAIL","keyFromPrivate","getPublic","sub","umod","toArrayLike","EC_PRIVATE_KEY_RANGE_INVALID","invm","EC_PRIVATE_KEY_TWEAK_ADD_FAIL","iadd","isub","EC_PRIVATE_KEY_TWEAK_MUL_FAIL","imul","EC_PUBLIC_KEY_CREATE_FAIL","pair","EC_PUBLIC_KEY_PARSE_FAIL","EC_PUBLIC_KEY_TWEAK_ADD_FAIL","point","g","mul","add","isInfinity","EC_PUBLIC_KEY_TWEAK_MUL_FAIL","pairs","j","EC_PUBLIC_KEY_COMBINE_FAIL","ECDSA_SIGNATURE_PARSE_FAIL","nh","getNonce","counter","nonce","ECDSA_SIGN_FAIL","canonical","k","pers","recoveryParam","sigr","sigs","recoverPubKey","ECDSA_RECOVER_FAIL","shared","update","digest","scalar","ECDH_FAIL","utils","ABI","elementaryName","name","startsWith","parseTypeN","type","parseInt","exec","parseTypeNxM","tmp","parseTypeArray","match","parseNumber","arg","isHexPrefixed","stripHexPrefix","toArray","parseSignature","args","method","split","retargs","params","encodeSingle","size","num","ret","lastIndexOf","JSON","parse","push","unshift","zeros","setLengthRight","bitLength","toTwos","pow","decodeSingle","parsedType","offset","parseType","rawType","bytes","toNumber","decoded","subArray","memoryUsage","fromTwos","mod","div","isDynamic","stringify","eventID","types","map","join","keccak256","methodID","rawEncode","values","output","headLength","forEach","cur","rawDecode","parsed","simpleEncode","arguments","simpleDecode","test","item","solidityHexValue","bitsize","subType","replace","arraySize","arrayValues","v","padding","bytesize","setLengthLeft","solidityPack","soliditySHA3","soliditySHA256","sha256","solidityRIPEMD160","ripemd160","fromSerpent","c","toSerpent","ethjsUtil","assign","__exportStar","ucmp","toPublicKey","getX","getY","keyFromPublic","addr","bytes_1","address","eip1191ChainId","toLowerCase","prefix","hash","hash_1","toUpperCase","nonceBN","salt","initCode","fromBuf","saltBuf","initCodeBuf","a","sanitize","pubKey","calculateSigRecovery","chainId","isValidSigRecovery","msgHash","senderPubKey","buf","homesteadOrLater","SECP256K1_N_DIV_2","SECP256K1_N","rBN","sBN","gt","self","fields","raw","_fields","toJSON","label","obj_1","field","serialize","rlp","getter","setter","allowZero","allocUnsafe","allowLess","defineProperty","enumerable","configurable","get","set","default","alias","keys_1","keys","indexOf","padToEven","intToHex","arrayContainsArray","superset","subset","some","Boolean","intToBuffer","hex","getBinarySize","str","byteLength","fromAscii","stringValue","charCodeAt","fromUtf8","toAscii","l","substring","code","substr","String","fromCharCode","toUtf8","getKeys","key","allowEmpty","isHexString","fill","msg","right","isBN","ba","array","check","secp256k1v3","Uint8Array","signOptions","algo","attempt","bufferAlgo","bufferData","ecdsaSign","recid","ecdsaVerify","ecdsaRecover","keccak224","keccak384","k256","keccak512","bits","padded"],"mappings":"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GAAM,IAAM,IAAM,EAAM,EAAM,EAAM,GAAM,GAAM,EAAM,EAAM,GAAM,IAAM,GAC1F,IAAM,GAAM,EAAM,EAAM,EAAM,GAAM,EAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAC1F,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAC1F,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAC1F,GAAM,EAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAC1F,GAAM,EAAM,EAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,GAAM,IAC1F,GAAM,IAAM,GAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,GAC1F,EAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAC1F,IAAM,IAAM,EAAM,GAAM,EAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAC1F,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAC1F,IAAM,IAAM,GAAM,GAAM,GAAM,EAAM,EAAM,EAAM,IAAM,GAAM,EAAM,GAAM,EAExE,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAC1F,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAC1F,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAC1F,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAC1F,IAGFrF,EAAQO,iB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EhDA,EAAYgE,EAAO0B,MAAM,KACf,GAAK,EACfpB,EAAEkE,YAAYxE,EAAQ,KAAM,IAAIa,KAAK7E,EAAW,GAChDuE,EAAEiE,YAAYxE,EAAQ,KAAM,IAAIa,KAAK7E,EAAW,KAG3CA,K,yHCxET,IAAMyE,EAAmCT,EAAOU,KAAK,CAEnD,GACA,IACA,IACA,EACA,EACA,EACA,EACA,GAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,IACA,GACA,IACA,GACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,EACA,EACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,GACA,EACA,EACA,EACA,IACA,GACA,EACA,GACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAGIC,EAAqCX,EAAOU,KAAK,CAErD,GACA,IACA,EACA,GACA,EACA,EACA,EACA,EACA,GAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,IACA,GACA,IACA,GACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,EACA,EACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,GACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,GACA,GACA,EACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,GACA,IACA,GACA,IACA,IACA,IACA,GACA,IACA,IACA,EACA,GACA,EACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,IACA,IACA,GACA,IACA,IACA,GACA,GACA,GACA,EACA,EACA,EACA,IACA,GACA,EACA,GACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,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","file":"static/js/1.dff6fb83.chunk.js","sourcesContent":["'use strict'\nvar assert = require('./assert')\nvar der = require('./der')\nvar messages = require('./messages.json')\n\nfunction initCompressedValue (value, defaultValue) {\n  if (value === undefined) return defaultValue\n\n  assert.isBoolean(value, messages.COMPRESSED_TYPE_INVALID)\n  return value\n}\n\nmodule.exports = function (secp256k1) {\n  return {\n    privateKeyVerify: function (privateKey) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      return privateKey.length === 32 && secp256k1.privateKeyVerify(privateKey)\n    },\n\n    privateKeyExport: function (privateKey, compressed) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n      var publicKey = secp256k1.privateKeyExport(privateKey, compressed)\n\n      return der.privateKeyExport(privateKey, publicKey, compressed)\n    },\n\n    privateKeyImport: function (privateKey) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n\n      privateKey = der.privateKeyImport(privateKey)\n      if (privateKey && privateKey.length === 32 && secp256k1.privateKeyVerify(privateKey)) return privateKey\n\n      throw new Error(messages.EC_PRIVATE_KEY_IMPORT_DER_FAIL)\n    },\n\n    privateKeyNegate: function (privateKey) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      return secp256k1.privateKeyNegate(privateKey)\n    },\n\n    privateKeyModInverse: function (privateKey) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      return secp256k1.privateKeyModInverse(privateKey)\n    },\n\n    privateKeyTweakAdd: function (privateKey, tweak) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      assert.isBuffer(tweak, messages.TWEAK_TYPE_INVALID)\n      assert.isBufferLength(tweak, 32, messages.TWEAK_LENGTH_INVALID)\n\n      return secp256k1.privateKeyTweakAdd(privateKey, tweak)\n    },\n\n    privateKeyTweakMul: function (privateKey, tweak) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      assert.isBuffer(tweak, messages.TWEAK_TYPE_INVALID)\n      assert.isBufferLength(tweak, 32, messages.TWEAK_LENGTH_INVALID)\n\n      return secp256k1.privateKeyTweakMul(privateKey, tweak)\n    },\n\n    publicKeyCreate: function (privateKey, compressed) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.publicKeyCreate(privateKey, compressed)\n    },\n\n    publicKeyConvert: function (publicKey, compressed) {\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.publicKeyConvert(publicKey, compressed)\n    },\n\n    publicKeyVerify: function (publicKey) {\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      return secp256k1.publicKeyVerify(publicKey)\n    },\n\n    publicKeyTweakAdd: function (publicKey, tweak, compressed) {\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n\n      assert.isBuffer(tweak, messages.TWEAK_TYPE_INVALID)\n      assert.isBufferLength(tweak, 32, messages.TWEAK_LENGTH_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.publicKeyTweakAdd(publicKey, tweak, compressed)\n    },\n\n    publicKeyTweakMul: function (publicKey, tweak, compressed) {\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n\n      assert.isBuffer(tweak, messages.TWEAK_TYPE_INVALID)\n      assert.isBufferLength(tweak, 32, messages.TWEAK_LENGTH_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.publicKeyTweakMul(publicKey, tweak, compressed)\n    },\n\n    publicKeyCombine: function (publicKeys, compressed) {\n      assert.isArray(publicKeys, messages.EC_PUBLIC_KEYS_TYPE_INVALID)\n      assert.isLengthGTZero(publicKeys, messages.EC_PUBLIC_KEYS_LENGTH_INVALID)\n      for (var i = 0; i < publicKeys.length; ++i) {\n        assert.isBuffer(publicKeys[i], messages.EC_PUBLIC_KEY_TYPE_INVALID)\n        assert.isBufferLength2(publicKeys[i], 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n      }\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.publicKeyCombine(publicKeys, compressed)\n    },\n\n    signatureNormalize: function (signature) {\n      assert.isBuffer(signature, messages.ECDSA_SIGNATURE_TYPE_INVALID)\n      assert.isBufferLength(signature, 64, messages.ECDSA_SIGNATURE_LENGTH_INVALID)\n\n      return secp256k1.signatureNormalize(signature)\n    },\n\n    signatureExport: function (signature) {\n      assert.isBuffer(signature, messages.ECDSA_SIGNATURE_TYPE_INVALID)\n      assert.isBufferLength(signature, 64, messages.ECDSA_SIGNATURE_LENGTH_INVALID)\n\n      var sigObj = secp256k1.signatureExport(signature)\n      return der.signatureExport(sigObj)\n    },\n\n    signatureImport: function (sig) {\n      assert.isBuffer(sig, messages.ECDSA_SIGNATURE_TYPE_INVALID)\n      assert.isLengthGTZero(sig, messages.ECDSA_SIGNATURE_LENGTH_INVALID)\n\n      var sigObj = der.signatureImport(sig)\n      if (sigObj) return secp256k1.signatureImport(sigObj)\n\n      throw new Error(messages.ECDSA_SIGNATURE_PARSE_DER_FAIL)\n    },\n\n    signatureImportLax: function (sig) {\n      assert.isBuffer(sig, messages.ECDSA_SIGNATURE_TYPE_INVALID)\n      assert.isLengthGTZero(sig, messages.ECDSA_SIGNATURE_LENGTH_INVALID)\n\n      var sigObj = der.signatureImportLax(sig)\n      if (sigObj) return secp256k1.signatureImport(sigObj)\n\n      throw new Error(messages.ECDSA_SIGNATURE_PARSE_DER_FAIL)\n    },\n\n    sign: function (message, privateKey, options) {\n      assert.isBuffer(message, messages.MSG32_TYPE_INVALID)\n      assert.isBufferLength(message, 32, messages.MSG32_LENGTH_INVALID)\n\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      var data = null\n      var noncefn = null\n      if (options !== undefined) {\n        assert.isObject(options, messages.OPTIONS_TYPE_INVALID)\n\n        if (options.data !== undefined) {\n          assert.isBuffer(options.data, messages.OPTIONS_DATA_TYPE_INVALID)\n          assert.isBufferLength(options.data, 32, messages.OPTIONS_DATA_LENGTH_INVALID)\n          data = options.data\n        }\n\n        if (options.noncefn !== undefined) {\n          assert.isFunction(options.noncefn, messages.OPTIONS_NONCEFN_TYPE_INVALID)\n          noncefn = options.noncefn\n        }\n      }\n\n      return secp256k1.sign(message, privateKey, noncefn, data)\n    },\n\n    verify: function (message, signature, publicKey) {\n      assert.isBuffer(message, messages.MSG32_TYPE_INVALID)\n      assert.isBufferLength(message, 32, messages.MSG32_LENGTH_INVALID)\n\n      assert.isBuffer(signature, messages.ECDSA_SIGNATURE_TYPE_INVALID)\n      assert.isBufferLength(signature, 64, messages.ECDSA_SIGNATURE_LENGTH_INVALID)\n\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n\n      return secp256k1.verify(message, signature, publicKey)\n    },\n\n    recover: function (message, signature, recovery, compressed) {\n      assert.isBuffer(message, messages.MSG32_TYPE_INVALID)\n      assert.isBufferLength(message, 32, messages.MSG32_LENGTH_INVALID)\n\n      assert.isBuffer(signature, messages.ECDSA_SIGNATURE_TYPE_INVALID)\n      assert.isBufferLength(signature, 64, messages.ECDSA_SIGNATURE_LENGTH_INVALID)\n\n      assert.isNumber(recovery, messages.RECOVERY_ID_TYPE_INVALID)\n      assert.isNumberInInterval(recovery, -1, 4, messages.RECOVERY_ID_VALUE_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.recover(message, signature, recovery, compressed)\n    },\n\n    ecdh: function (publicKey, privateKey) {\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      return secp256k1.ecdh(publicKey, privateKey)\n    },\n\n    ecdhUnsafe: function (publicKey, privateKey, compressed) {\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.ecdhUnsafe(publicKey, privateKey, compressed)\n    }\n  }\n}\n","'use strict'\nvar toString = Object.prototype.toString\n\n// TypeError\nexports.isArray = function (value, message) {\n  if (!Array.isArray(value)) throw TypeError(message)\n}\n\nexports.isBoolean = function (value, message) {\n  if (toString.call(value) !== '[object Boolean]') throw TypeError(message)\n}\n\nexports.isBuffer = function (value, message) {\n  if (!Buffer.isBuffer(value)) throw TypeError(message)\n}\n\nexports.isFunction = function (value, message) {\n  if (toString.call(value) !== '[object Function]') throw TypeError(message)\n}\n\nexports.isNumber = function (value, message) {\n  if (toString.call(value) !== '[object Number]') throw TypeError(message)\n}\n\nexports.isObject = function (value, message) {\n  if (toString.call(value) !== '[object Object]') throw TypeError(message)\n}\n\n// RangeError\nexports.isBufferLength = function (buffer, length, message) {\n  if (buffer.length !== length) throw RangeError(message)\n}\n\nexports.isBufferLength2 = function (buffer, length1, length2, message) {\n  if (buffer.length !== length1 && buffer.length !== length2) throw RangeError(message)\n}\n\nexports.isLengthGTZero = function (value, message) {\n  if (value.length === 0) throw RangeError(message)\n}\n\nexports.isNumberInInterval = function (number, x, y, message) {\n  if (number <= x || number >= y) throw RangeError(message)\n}\n","'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar bip66 = require('bip66')\n\nvar EC_PRIVKEY_EXPORT_DER_COMPRESSED = Buffer.from([\n  // begin\n  0x30, 0x81, 0xd3, 0x02, 0x01, 0x01, 0x04, 0x20,\n  // private key\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  // middle\n  0xa0, 0x81, 0x85, 0x30, 0x81, 0x82, 0x02, 0x01, 0x01, 0x30, 0x2c, 0x06, 0x07, 0x2a, 0x86, 0x48,\n  0xcE, 0x3d, 0x01, 0x01, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xfE, 0xff, 0xff, 0xfc, 0x2f, 0x30, 0x06, 0x04, 0x01, 0x00, 0x04, 0x01, 0x07, 0x04,\n  0x21, 0x02, 0x79, 0xbE, 0x66, 0x7E, 0xf9, 0xdc, 0xbb, 0xac, 0x55, 0xa0, 0x62, 0x95, 0xcE, 0x87,\n  0x0b, 0x07, 0x02, 0x9b, 0xfc, 0xdb, 0x2d, 0xcE, 0x28, 0xd9, 0x59, 0xf2, 0x81, 0x5b, 0x16, 0xf8,\n  0x17, 0x98, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xff, 0xff, 0xfE, 0xba, 0xaE, 0xdc, 0xE6, 0xaf, 0x48, 0xa0, 0x3b, 0xbf, 0xd2, 0x5E,\n  0x8c, 0xd0, 0x36, 0x41, 0x41, 0x02, 0x01, 0x01, 0xa1, 0x24, 0x03, 0x22, 0x00,\n  // public key\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00\n])\n\nvar EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED = Buffer.from([\n  // begin\n  0x30, 0x82, 0x01, 0x13, 0x02, 0x01, 0x01, 0x04, 0x20,\n  // private key\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  // middle\n  0xa0, 0x81, 0xa5, 0x30, 0x81, 0xa2, 0x02, 0x01, 0x01, 0x30, 0x2c, 0x06, 0x07, 0x2a, 0x86, 0x48,\n  0xcE, 0x3d, 0x01, 0x01, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xfE, 0xff, 0xff, 0xfc, 0x2f, 0x30, 0x06, 0x04, 0x01, 0x00, 0x04, 0x01, 0x07, 0x04,\n  0x41, 0x04, 0x79, 0xbE, 0x66, 0x7E, 0xf9, 0xdc, 0xbb, 0xac, 0x55, 0xa0, 0x62, 0x95, 0xcE, 0x87,\n  0x0b, 0x07, 0x02, 0x9b, 0xfc, 0xdb, 0x2d, 0xcE, 0x28, 0xd9, 0x59, 0xf2, 0x81, 0x5b, 0x16, 0xf8,\n  0x17, 0x98, 0x48, 0x3a, 0xda, 0x77, 0x26, 0xa3, 0xc4, 0x65, 0x5d, 0xa4, 0xfb, 0xfc, 0x0E, 0x11,\n  0x08, 0xa8, 0xfd, 0x17, 0xb4, 0x48, 0xa6, 0x85, 0x54, 0x19, 0x9c, 0x47, 0xd0, 0x8f, 0xfb, 0x10,\n  0xd4, 0xb8, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xff, 0xff, 0xfE, 0xba, 0xaE, 0xdc, 0xE6, 0xaf, 0x48, 0xa0, 0x3b, 0xbf, 0xd2, 0x5E,\n  0x8c, 0xd0, 0x36, 0x41, 0x41, 0x02, 0x01, 0x01, 0xa1, 0x44, 0x03, 0x42, 0x00,\n  // public key\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00\n])\n\nexports.privateKeyExport = function (privateKey, publicKey, compressed) {\n  var result = Buffer.from(compressed ? EC_PRIVKEY_EXPORT_DER_COMPRESSED : EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED)\n  privateKey.copy(result, compressed ? 8 : 9)\n  publicKey.copy(result, compressed ? 181 : 214)\n  return result\n}\n\nexports.privateKeyImport = function (privateKey) {\n  var length = privateKey.length\n\n  // sequence header\n  var index = 0\n  if (length < index + 1 || privateKey[index] !== 0x30) return\n  index += 1\n\n  // sequence length constructor\n  if (length < index + 1 || !(privateKey[index] & 0x80)) return\n\n  var lenb = privateKey[index] & 0x7f\n  index += 1\n  if (lenb < 1 || lenb > 2) return\n  if (length < index + lenb) return\n\n  // sequence length\n  var len = privateKey[index + lenb - 1] | (lenb > 1 ? privateKey[index + lenb - 2] << 8 : 0)\n  index += lenb\n  if (length < index + len) return\n\n  // sequence element 0: version number (=1)\n  if (length < index + 3 ||\n      privateKey[index] !== 0x02 ||\n      privateKey[index + 1] !== 0x01 ||\n      privateKey[index + 2] !== 0x01) {\n    return\n  }\n  index += 3\n\n  // sequence element 1: octet string, up to 32 bytes\n  if (length < index + 2 ||\n      privateKey[index] !== 0x04 ||\n      privateKey[index + 1] > 0x20 ||\n      length < index + 2 + privateKey[index + 1]) {\n    return\n  }\n\n  return privateKey.slice(index + 2, index + 2 + privateKey[index + 1])\n}\n\nexports.signatureExport = function (sigObj) {\n  var r = Buffer.concat([Buffer.from([0]), sigObj.r])\n  for (var lenR = 33, posR = 0; lenR > 1 && r[posR] === 0x00 && !(r[posR + 1] & 0x80); --lenR, ++posR);\n\n  var s = Buffer.concat([Buffer.from([0]), sigObj.s])\n  for (var lenS = 33, posS = 0; lenS > 1 && s[posS] === 0x00 && !(s[posS + 1] & 0x80); --lenS, ++posS);\n\n  return bip66.encode(r.slice(posR), s.slice(posS))\n}\n\nexports.signatureImport = function (sig) {\n  var r = Buffer.alloc(32, 0)\n  var s = Buffer.alloc(32, 0)\n\n  try {\n    var sigObj = bip66.decode(sig)\n    if (sigObj.r.length === 33 && sigObj.r[0] === 0x00) sigObj.r = sigObj.r.slice(1)\n    if (sigObj.r.length > 32) throw new Error('R length is too long')\n    if (sigObj.s.length === 33 && sigObj.s[0] === 0x00) sigObj.s = sigObj.s.slice(1)\n    if (sigObj.s.length > 32) throw new Error('S length is too long')\n  } catch (err) {\n    return\n  }\n\n  sigObj.r.copy(r, 32 - sigObj.r.length)\n  sigObj.s.copy(s, 32 - sigObj.s.length)\n\n  return { r: r, s: s }\n}\n\nexports.signatureImportLax = function (sig) {\n  var r = Buffer.alloc(32, 0)\n  var s = Buffer.alloc(32, 0)\n\n  var length = sig.length\n  var index = 0\n\n  // sequence tag byte\n  if (sig[index++] !== 0x30) return\n\n  // sequence length byte\n  var lenbyte = sig[index++]\n  if (lenbyte & 0x80) {\n    index += lenbyte - 0x80\n    if (index > length) return\n  }\n\n  // sequence tag byte for r\n  if (sig[index++] !== 0x02) return\n\n  // length for r\n  var rlen = sig[index++]\n  if (rlen & 0x80) {\n    lenbyte = rlen - 0x80\n    if (index + lenbyte > length) return\n    for (; lenbyte > 0 && sig[index] === 0x00; index += 1, lenbyte -= 1);\n    for (rlen = 0; lenbyte > 0; index += 1, lenbyte -= 1) rlen = (rlen << 8) + sig[index]\n  }\n  if (rlen > length - index) return\n  var rindex = index\n  index += rlen\n\n  // sequence tag byte for s\n  if (sig[index++] !== 0x02) return\n\n  // length for s\n  var slen = sig[index++]\n  if (slen & 0x80) {\n    lenbyte = slen - 0x80\n    if (index + lenbyte > length) return\n    for (; lenbyte > 0 && sig[index] === 0x00; index += 1, lenbyte -= 1);\n    for (slen = 0; lenbyte > 0; index += 1, lenbyte -= 1) slen = (slen << 8) + sig[index]\n  }\n  if (slen > length - index) return\n  var sindex = index\n  index += slen\n\n  // ignore leading zeros in r\n  for (; rlen > 0 && sig[rindex] === 0x00; rlen -= 1, rindex += 1);\n  // copy r value\n  if (rlen > 32) return\n  var rvalue = sig.slice(rindex, rindex + rlen)\n  rvalue.copy(r, 32 - rvalue.length)\n\n  // ignore leading zeros in s\n  for (; slen > 0 && sig[sindex] === 0x00; slen -= 1, sindex += 1);\n  // copy s value\n  if (slen > 32) return\n  var svalue = sig.slice(sindex, sindex + slen)\n  svalue.copy(s, 32 - svalue.length)\n\n  return { r: r, s: s }\n}\n","'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar createHash = require('create-hash')\nvar BN = require('bn.js')\nvar EC = require('elliptic').ec\n\nvar messages = require('../messages.json')\n\nvar ec = new EC('secp256k1')\nvar ecparams = ec.curve\n\nfunction loadCompressedPublicKey (first, xBuffer) {\n  var x = new BN(xBuffer)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0) return null\n  x = x.toRed(ecparams.red)\n\n  // compute corresponding Y\n  var y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt()\n  if ((first === 0x03) !== y.isOdd()) y = y.redNeg()\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadUncompressedPublicKey (first, xBuffer, yBuffer) {\n  var x = new BN(xBuffer)\n  var y = new BN(yBuffer)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null\n\n  x = x.toRed(ecparams.red)\n  y = y.toRed(ecparams.red)\n\n  // is odd flag\n  if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null\n\n  // x*x*x + b = y*y\n  var x3 = x.redSqr().redIMul(x)\n  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadPublicKey (publicKey) {\n  var first = publicKey[0]\n  switch (first) {\n    case 0x02:\n    case 0x03:\n      if (publicKey.length !== 33) return null\n      return loadCompressedPublicKey(first, publicKey.slice(1, 33))\n    case 0x04:\n    case 0x06:\n    case 0x07:\n      if (publicKey.length !== 65) return null\n      return loadUncompressedPublicKey(first, publicKey.slice(1, 33), publicKey.slice(33, 65))\n    default:\n      return null\n  }\n}\n\nexports.privateKeyVerify = function (privateKey) {\n  var bn = new BN(privateKey)\n  return bn.cmp(ecparams.n) < 0 && !bn.isZero()\n}\n\nexports.privateKeyExport = function (privateKey, compressed) {\n  var d = new BN(privateKey)\n  if (d.cmp(ecparams.n) >= 0 || d.isZero()) throw new Error(messages.EC_PRIVATE_KEY_EXPORT_DER_FAIL)\n\n  return Buffer.from(ec.keyFromPrivate(privateKey).getPublic(compressed, true))\n}\n\nexports.privateKeyNegate = function (privateKey) {\n  var bn = new BN(privateKey)\n  return bn.isZero() ? Buffer.alloc(32) : ecparams.n.sub(bn).umod(ecparams.n).toArrayLike(Buffer, 'be', 32)\n}\n\nexports.privateKeyModInverse = function (privateKey) {\n  var bn = new BN(privateKey)\n  if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) throw new Error(messages.EC_PRIVATE_KEY_RANGE_INVALID)\n\n  return bn.invm(ecparams.n).toArrayLike(Buffer, 'be', 32)\n}\n\nexports.privateKeyTweakAdd = function (privateKey, tweak) {\n  var bn = new BN(tweak)\n  if (bn.cmp(ecparams.n) >= 0) throw new Error(messages.EC_PRIVATE_KEY_TWEAK_ADD_FAIL)\n\n  bn.iadd(new BN(privateKey))\n  if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n)\n  if (bn.isZero()) throw new Error(messages.EC_PRIVATE_KEY_TWEAK_ADD_FAIL)\n\n  return bn.toArrayLike(Buffer, 'be', 32)\n}\n\nexports.privateKeyTweakMul = function (privateKey, tweak) {\n  var bn = new BN(tweak)\n  if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) throw new Error(messages.EC_PRIVATE_KEY_TWEAK_MUL_FAIL)\n\n  bn.imul(new BN(privateKey))\n  if (bn.cmp(ecparams.n)) bn = bn.umod(ecparams.n)\n\n  return bn.toArrayLike(Buffer, 'be', 32)\n}\n\nexports.publicKeyCreate = function (privateKey, compressed) {\n  var d = new BN(privateKey)\n  if (d.cmp(ecparams.n) >= 0 || d.isZero()) throw new Error(messages.EC_PUBLIC_KEY_CREATE_FAIL)\n\n  return Buffer.from(ec.keyFromPrivate(privateKey).getPublic(compressed, true))\n}\n\nexports.publicKeyConvert = function (publicKey, compressed) {\n  var pair = loadPublicKey(publicKey)\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n\n  return Buffer.from(pair.getPublic(compressed, true))\n}\n\nexports.publicKeyVerify = function (publicKey) {\n  return loadPublicKey(publicKey) !== null\n}\n\nexports.publicKeyTweakAdd = function (publicKey, tweak, compressed) {\n  var pair = loadPublicKey(publicKey)\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n\n  tweak = new BN(tweak)\n  if (tweak.cmp(ecparams.n) >= 0) throw new Error(messages.EC_PUBLIC_KEY_TWEAK_ADD_FAIL)\n\n  var point = ecparams.g.mul(tweak).add(pair.pub)\n  if (point.isInfinity()) throw new Error(messages.EC_PUBLIC_KEY_TWEAK_ADD_FAIL)\n\n  return Buffer.from(point.encode(true, compressed))\n}\n\nexports.publicKeyTweakMul = function (publicKey, tweak, compressed) {\n  var pair = loadPublicKey(publicKey)\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n\n  tweak = new BN(tweak)\n  if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) throw new Error(messages.EC_PUBLIC_KEY_TWEAK_MUL_FAIL)\n\n  return Buffer.from(pair.pub.mul(tweak).encode(true, compressed))\n}\n\nexports.publicKeyCombine = function (publicKeys, compressed) {\n  var pairs = new Array(publicKeys.length)\n  for (var i = 0; i < publicKeys.length; ++i) {\n    pairs[i] = loadPublicKey(publicKeys[i])\n    if (pairs[i] === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n  }\n\n  var point = pairs[0].pub\n  for (var j = 1; j < pairs.length; ++j) point = point.add(pairs[j].pub)\n  if (point.isInfinity()) throw new Error(messages.EC_PUBLIC_KEY_COMBINE_FAIL)\n\n  return Buffer.from(point.encode(true, compressed))\n}\n\nexports.signatureNormalize = function (signature) {\n  var r = new BN(signature.slice(0, 32))\n  var s = new BN(signature.slice(32, 64))\n  if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL)\n\n  var result = Buffer.from(signature)\n  if (s.cmp(ec.nh) === 1) ecparams.n.sub(s).toArrayLike(Buffer, 'be', 32).copy(result, 32)\n\n  return result\n}\n\nexports.signatureExport = function (signature) {\n  var r = signature.slice(0, 32)\n  var s = signature.slice(32, 64)\n  if (new BN(r).cmp(ecparams.n) >= 0 || new BN(s).cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL)\n\n  return { r: r, s: s }\n}\n\nexports.signatureImport = function (sigObj) {\n  var r = new BN(sigObj.r)\n  if (r.cmp(ecparams.n) >= 0) r = new BN(0)\n\n  var s = new BN(sigObj.s)\n  if (s.cmp(ecparams.n) >= 0) s = new BN(0)\n\n  return Buffer.concat([\n    r.toArrayLike(Buffer, 'be', 32),\n    s.toArrayLike(Buffer, 'be', 32)\n  ])\n}\n\nexports.sign = function (message, privateKey, noncefn, data) {\n  if (typeof noncefn === 'function') {\n    var getNonce = noncefn\n    noncefn = function (counter) {\n      var nonce = getNonce(message, privateKey, null, data, counter)\n      if (!Buffer.isBuffer(nonce) || nonce.length !== 32) throw new Error(messages.ECDSA_SIGN_FAIL)\n\n      return new BN(nonce)\n    }\n  }\n\n  var d = new BN(privateKey)\n  if (d.cmp(ecparams.n) >= 0 || d.isZero()) throw new Error(messages.ECDSA_SIGN_FAIL)\n\n  var result = ec.sign(message, privateKey, { canonical: true, k: noncefn, pers: data })\n  return {\n    signature: Buffer.concat([\n      result.r.toArrayLike(Buffer, 'be', 32),\n      result.s.toArrayLike(Buffer, 'be', 32)\n    ]),\n    recovery: result.recoveryParam\n  }\n}\n\nexports.verify = function (message, signature, publicKey) {\n  var sigObj = { r: signature.slice(0, 32), s: signature.slice(32, 64) }\n\n  var sigr = new BN(sigObj.r)\n  var sigs = new BN(sigObj.s)\n  if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL)\n  if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return false\n\n  var pair = loadPublicKey(publicKey)\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n\n  return ec.verify(message, sigObj, { x: pair.pub.x, y: pair.pub.y })\n}\n\nexports.recover = function (message, signature, recovery, compressed) {\n  var sigObj = { r: signature.slice(0, 32), s: signature.slice(32, 64) }\n\n  var sigr = new BN(sigObj.r)\n  var sigs = new BN(sigObj.s)\n  if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) throw new Error(messages.ECDSA_SIGNATURE_PARSE_FAIL)\n\n  try {\n    if (sigr.isZero() || sigs.isZero()) throw new Error()\n\n    var point = ec.recoverPubKey(message, sigObj, recovery)\n    return Buffer.from(point.encode(true, compressed))\n  } catch (err) {\n    throw new Error(messages.ECDSA_RECOVER_FAIL)\n  }\n}\n\nexports.ecdh = function (publicKey, privateKey) {\n  var shared = exports.ecdhUnsafe(publicKey, privateKey, true)\n  return createHash('sha256').update(shared).digest()\n}\n\nexports.ecdhUnsafe = function (publicKey, privateKey, compressed) {\n  var pair = loadPublicKey(publicKey)\n  if (pair === null) throw new Error(messages.EC_PUBLIC_KEY_PARSE_FAIL)\n\n  var scalar = new BN(privateKey)\n  if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) throw new Error(messages.ECDH_FAIL)\n\n  return Buffer.from(pair.pub.mul(scalar).encode(true, compressed))\n}\n","/* eslint-disable no-useless-escape */\nconst utils = require('ethereumjs-util')\nconst BN = require('bn.js')\n\nvar ABI = function () {\n}\n\n// Convert from short to canonical names\n// FIXME: optimise or make this nicer?\nfunction elementaryName (name) {\n  if (name.startsWith('int[')) {\n    return 'int256' + name.slice(3)\n  } else if (name === 'int') {\n    return 'int256'\n  } else if (name.startsWith('uint[')) {\n    return 'uint256' + name.slice(4)\n  } else if (name === 'uint') {\n    return 'uint256'\n  } else if (name.startsWith('fixed[')) {\n    return 'fixed128x128' + name.slice(5)\n  } else if (name === 'fixed') {\n    return 'fixed128x128'\n  } else if (name.startsWith('ufixed[')) {\n    return 'ufixed128x128' + name.slice(6)\n  } else if (name === 'ufixed') {\n    return 'ufixed128x128'\n  }\n  return name\n}\n\nABI.eventID = function (name, types) {\n  // FIXME: use node.js util.format?\n  var sig = name + '(' + types.map(elementaryName).join(',') + ')'\n  return utils.keccak256(Buffer.from(sig))\n}\n\nABI.methodID = function (name, types) {\n  return ABI.eventID(name, types).slice(0, 4)\n}\n\n// Parse N from type<N>\nfunction parseTypeN (type) {\n  return parseInt(/^\\D+(\\d+)$/.exec(type)[1], 10)\n}\n\n// Parse N,M from type<N>x<M>\nfunction parseTypeNxM (type) {\n  var tmp = /^\\D+(\\d+)x(\\d+)$/.exec(type)\n  return [ parseInt(tmp[1], 10), parseInt(tmp[2], 10) ]\n}\n\n// Parse N in type[<N>] where \"type\" can itself be an array type.\nfunction parseTypeArray (type) {\n  var tmp = type.match(/(.*)\\[(.*?)\\]$/)\n  if (tmp) {\n    return tmp[2] === '' ? 'dynamic' : parseInt(tmp[2], 10)\n  }\n  return null\n}\n\nfunction parseNumber (arg) {\n  var type = typeof arg\n  if (type === 'string') {\n    if (utils.isHexPrefixed(arg)) {\n      return new BN(utils.stripHexPrefix(arg), 16)\n    } else {\n      return new BN(arg, 10)\n    }\n  } else if (type === 'number') {\n    return new BN(arg)\n  } else if (arg.toArray) {\n    // assume this is a BN for the moment, replace with BN.isBN soon\n    return arg\n  } else {\n    throw new Error('Argument is not a number')\n  }\n}\n\n// someMethod(bytes,uint)\n// someMethod(bytes,uint):(boolean)\nfunction parseSignature (sig) {\n  var tmp = /^(\\w+)\\((.*)\\)$/.exec(sig)\n\n  if (tmp.length !== 3) {\n    throw new Error('Invalid method signature')\n  }\n\n  var args = /^(.+)\\):\\((.+)$/.exec(tmp[2])\n\n  if (args !== null && args.length === 3) {\n    return {\n      method: tmp[1],\n      args: args[1].split(','),\n      retargs: args[2].split(',')\n    }\n  } else {\n    var params = tmp[2].split(',')\n    if (params.length === 1 && params[0] === '') {\n      // Special-case (possibly naive) fixup for functions that take no arguments.\n      // TODO: special cases are always bad, but this makes the function return\n      // match what the calling functions expect\n      params = []\n    }\n    return {\n      method: tmp[1],\n      args: params\n    }\n  }\n}\n\n// Encodes a single item (can be dynamic array)\n// @returns: Buffer\nfunction encodeSingle (type, arg) {\n  var size, num, ret, i\n\n  if (type === 'address') {\n    return encodeSingle('uint160', parseNumber(arg))\n  } else if (type === 'bool') {\n    return encodeSingle('uint8', arg ? 1 : 0)\n  } else if (type === 'string') {\n    return encodeSingle('bytes', Buffer.from(arg, 'utf8'))\n  } else if (isArray(type)) {\n    // this part handles fixed-length ([2]) and variable length ([]) arrays\n    // NOTE: we catch here all calls to arrays, that simplifies the rest\n    if (typeof arg.length === 'undefined') {\n      throw new Error('Not an array?')\n    }\n    size = parseTypeArray(type)\n    if (size !== 'dynamic' && size !== 0 && arg.length > size) {\n      throw new Error('Elements exceed array size: ' + size)\n    }\n    ret = []\n    type = type.slice(0, type.lastIndexOf('['))\n    if (typeof arg === 'string') {\n      arg = JSON.parse(arg)\n    }\n    for (i in arg) {\n      ret.push(encodeSingle(type, arg[i]))\n    }\n    if (size === 'dynamic') {\n      var length = encodeSingle('uint256', arg.length)\n      ret.unshift(length)\n    }\n    return Buffer.concat(ret)\n  } else if (type === 'bytes') {\n    arg = Buffer.from(arg)\n\n    ret = Buffer.concat([ encodeSingle('uint256', arg.length), arg ])\n\n    if ((arg.length % 32) !== 0) {\n      ret = Buffer.concat([ ret, utils.zeros(32 - (arg.length % 32)) ])\n    }\n\n    return ret\n  } else if (type.startsWith('bytes')) {\n    size = parseTypeN(type)\n    if (size < 1 || size > 32) {\n      throw new Error('Invalid bytes<N> width: ' + size)\n    }\n\n    return utils.setLengthRight(arg, 32)\n  } else if (type.startsWith('uint')) {\n    size = parseTypeN(type)\n    if ((size % 8) || (size < 8) || (size > 256)) {\n      throw new Error('Invalid uint<N> width: ' + size)\n    }\n\n    num = parseNumber(arg)\n    if (num.bitLength() > size) {\n      throw new Error('Supplied uint exceeds width: ' + size + ' vs ' + num.bitLength())\n    }\n\n    if (num < 0) {\n      throw new Error('Supplied uint is negative')\n    }\n\n    return num.toArrayLike(Buffer, 'be', 32)\n  } else if (type.startsWith('int')) {\n    size = parseTypeN(type)\n    if ((size % 8) || (size < 8) || (size > 256)) {\n      throw new Error('Invalid int<N> width: ' + size)\n    }\n\n    num = parseNumber(arg)\n    if (num.bitLength() > size) {\n      throw new Error('Supplied int exceeds width: ' + size + ' vs ' + num.bitLength())\n    }\n\n    return num.toTwos(256).toArrayLike(Buffer, 'be', 32)\n  } else if (type.startsWith('ufixed')) {\n    size = parseTypeNxM(type)\n\n    num = parseNumber(arg)\n\n    if (num < 0) {\n      throw new Error('Supplied ufixed is negative')\n    }\n\n    return encodeSingle('uint256', num.mul(new BN(2).pow(new BN(size[1]))))\n  } else if (type.startsWith('fixed')) {\n    size = parseTypeNxM(type)\n\n    return encodeSingle('int256', parseNumber(arg).mul(new BN(2).pow(new BN(size[1]))))\n  }\n\n  throw new Error('Unsupported or invalid type: ' + type)\n}\n\n// Decodes a single item (can be dynamic array)\n// @returns: array\n// FIXME: this method will need a lot of attention at checking limits and validation\nfunction decodeSingle (parsedType, data, offset) {\n  if (typeof parsedType === 'string') {\n    parsedType = parseType(parsedType)\n  }\n  var size, num, ret, i\n\n  if (parsedType.name === 'address') {\n    return decodeSingle(parsedType.rawType, data, offset).toArrayLike(Buffer, 'be', 20).toString('hex')\n  } else if (parsedType.name === 'bool') {\n    return decodeSingle(parsedType.rawType, data, offset).toString() === new BN(1).toString()\n  } else if (parsedType.name === 'string') {\n    var bytes = decodeSingle(parsedType.rawType, data, offset)\n    return Buffer.from(bytes, 'utf8').toString()\n  } else if (parsedType.isArray) {\n    // this part handles fixed-length arrays ([2]) and variable length ([]) arrays\n    // NOTE: we catch here all calls to arrays, that simplifies the rest\n    ret = []\n    size = parsedType.size\n\n    if (parsedType.size === 'dynamic') {\n      offset = decodeSingle('uint256', data, offset).toNumber()\n      size = decodeSingle('uint256', data, offset).toNumber()\n      offset = offset + 32\n    }\n    for (i = 0; i < size; i++) {\n      var decoded = decodeSingle(parsedType.subArray, data, offset)\n      ret.push(decoded)\n      offset += parsedType.subArray.memoryUsage\n    }\n    return ret\n  } else if (parsedType.name === 'bytes') {\n    offset = decodeSingle('uint256', data, offset).toNumber()\n    size = decodeSingle('uint256', data, offset).toNumber()\n    return data.slice(offset + 32, offset + 32 + size)\n  } else if (parsedType.name.startsWith('bytes')) {\n    return data.slice(offset, offset + parsedType.size)\n  } else if (parsedType.name.startsWith('uint')) {\n    num = new BN(data.slice(offset, offset + 32), 16, 'be')\n    if (num.bitLength() > parsedType.size) {\n      throw new Error('Decoded int exceeds width: ' + parsedType.size + ' vs ' + num.bitLength())\n    }\n    return num\n  } else if (parsedType.name.startsWith('int')) {\n    num = new BN(data.slice(offset, offset + 32), 16, 'be').fromTwos(256)\n    if (num.bitLength() > parsedType.size) {\n      throw new Error('Decoded uint exceeds width: ' + parsedType.size + ' vs ' + num.bitLength())\n    }\n\n    return num\n  } else if (parsedType.name.startsWith('ufixed')) {\n    size = new BN(2).pow(new BN(parsedType.size[1]))\n    num = decodeSingle('uint256', data, offset)\n    if (!num.mod(size).isZero()) {\n      throw new Error('Decimals not supported yet')\n    }\n    return num.div(size)\n  } else if (parsedType.name.startsWith('fixed')) {\n    size = new BN(2).pow(new BN(parsedType.size[1]))\n    num = decodeSingle('int256', data, offset)\n    if (!num.mod(size).isZero()) {\n      throw new Error('Decimals not supported yet')\n    }\n    return num.div(size)\n  }\n  throw new Error('Unsupported or invalid type: ' + parsedType.name)\n}\n\n// Parse the given type\n// @returns: {} containing the type itself, memory usage and (including size and subArray if applicable)\nfunction parseType (type) {\n  var size\n  var ret\n  if (isArray(type)) {\n    size = parseTypeArray(type)\n    var subArray = type.slice(0, type.lastIndexOf('['))\n    subArray = parseType(subArray)\n    ret = {\n      isArray: true,\n      name: type,\n      size: size,\n      memoryUsage: size === 'dynamic' ? 32 : subArray.memoryUsage * size,\n      subArray: subArray\n    }\n    return ret\n  } else {\n    var rawType\n    switch (type) {\n      case 'address':\n        rawType = 'uint160'\n        break\n      case 'bool':\n        rawType = 'uint8'\n        break\n      case 'string':\n        rawType = 'bytes'\n        break\n    }\n    ret = {\n      rawType: rawType,\n      name: type,\n      memoryUsage: 32\n    }\n\n    if ((type.startsWith('bytes') && type !== 'bytes') || type.startsWith('uint') || type.startsWith('int')) {\n      ret.size = parseTypeN(type)\n    } else if (type.startsWith('ufixed') || type.startsWith('fixed')) {\n      ret.size = parseTypeNxM(type)\n    }\n\n    if (type.startsWith('bytes') && type !== 'bytes' && (ret.size < 1 || ret.size > 32)) {\n      throw new Error('Invalid bytes<N> width: ' + ret.size)\n    }\n    if ((type.startsWith('uint') || type.startsWith('int')) && (ret.size % 8 || ret.size < 8 || ret.size > 256)) {\n      throw new Error('Invalid int/uint<N> width: ' + ret.size)\n    }\n    return ret\n  }\n}\n\n// Is a type dynamic?\nfunction isDynamic (type) {\n  // FIXME: handle all types? I don't think anything is missing now\n  return (type === 'string') || (type === 'bytes') || (parseTypeArray(type) === 'dynamic')\n}\n\n// Is a type an array?\nfunction isArray (type) {\n  return type.lastIndexOf(']') === type.length - 1\n}\n\n// Encode a method/event with arguments\n// @types an array of string type names\n// @args  an array of the appropriate values\nABI.rawEncode = function (types, values) {\n  var output = []\n  var data = []\n\n  var headLength = 0\n\n  types.forEach(function (type) {\n    if (isArray(type)) {\n      var size = parseTypeArray(type)\n\n      if (size !== 'dynamic') {\n        headLength += 32 * size\n      } else {\n        headLength += 32\n      }\n    } else {\n      headLength += 32\n    }\n  })\n\n  for (var i = 0; i < types.length; i++) {\n    var type = elementaryName(types[i])\n    var value = values[i]\n    var cur = encodeSingle(type, value)\n\n    // Use the head/tail method for storing dynamic data\n    if (isDynamic(type)) {\n      output.push(encodeSingle('uint256', headLength))\n      data.push(cur)\n      headLength += cur.length\n    } else {\n      output.push(cur)\n    }\n  }\n\n  return Buffer.concat(output.concat(data))\n}\n\nABI.rawDecode = function (types, data) {\n  var ret = []\n  data = Buffer.from(data)\n  var offset = 0\n  for (var i = 0; i < types.length; i++) {\n    var type = elementaryName(types[i])\n    var parsed = parseType(type, data, offset)\n    var decoded = decodeSingle(parsed, data, offset)\n    offset += parsed.memoryUsage\n    ret.push(decoded)\n  }\n  return ret\n}\n\nABI.simpleEncode = function (method) {\n  var args = Array.prototype.slice.call(arguments).slice(1)\n  var sig = parseSignature(method)\n\n  // FIXME: validate/convert arguments\n  if (args.length !== sig.args.length) {\n    throw new Error('Argument count mismatch')\n  }\n\n  return Buffer.concat([ ABI.methodID(sig.method, sig.args), ABI.rawEncode(sig.args, args) ])\n}\n\nABI.simpleDecode = function (method, data) {\n  var sig = parseSignature(method)\n\n  // FIXME: validate/convert arguments\n  if (!sig.retargs) {\n    throw new Error('No return values in method')\n  }\n\n  return ABI.rawDecode(sig.retargs, data)\n}\n\nfunction stringify (type, value) {\n  if (type.startsWith('address') || type.startsWith('bytes')) {\n    return '0x' + value.toString('hex')\n  } else {\n    return value.toString()\n  }\n}\n\nABI.stringify = function (types, values) {\n  var ret = []\n\n  for (var i in types) {\n    var type = types[i]\n    var value = values[i]\n\n    // if it is an array type, concat the items\n    if (/^[^\\[]+\\[.*\\]$/.test(type)) {\n      value = value.map(function (item) {\n        return stringify(type, item)\n      }).join(', ')\n    } else {\n      value = stringify(type, value)\n    }\n\n    ret.push(value)\n  }\n\n  return ret\n}\n\nABI.solidityHexValue = function (type, value, bitsize) {\n  // pass in bitsize = null if use default bitsize\n  var size, num\n  if (isArray(type)) {\n    var subType = type.replace(/\\[.*?\\]/, '')\n    if (!isArray(subType)) {\n      var arraySize = parseTypeArray(type)\n      if (arraySize !== 'dynamic' && arraySize !== 0 && value.length > arraySize) {\n        throw new Error('Elements exceed array size: ' + arraySize)\n      }\n    }\n    var arrayValues = value.map(function (v) {\n      return ABI.solidityHexValue(subType, v, 256)\n    })\n    return Buffer.concat(arrayValues)\n  } else if (type === 'bytes') {\n    return value\n  } else if (type === 'string') {\n    return Buffer.from(value, 'utf8')\n  } else if (type === 'bool') {\n    bitsize = bitsize || 8\n    var padding = Array((bitsize) / 4).join('0')\n    return Buffer.from(value ? padding + '1' : padding + '0', 'hex')\n  } else if (type === 'address') {\n    var bytesize = 20\n    if (bitsize) {\n      bytesize = bitsize / 8\n    }\n    return utils.setLengthLeft(value, bytesize)\n  } else if (type.startsWith('bytes')) {\n    size = parseTypeN(type)\n    if (size < 1 || size > 32) {\n      throw new Error('Invalid bytes<N> width: ' + size)\n    }\n\n    return utils.setLengthRight(value, size)\n  } else if (type.startsWith('uint')) {\n    size = parseTypeN(type)\n    if ((size % 8) || (size < 8) || (size > 256)) {\n      throw new Error('Invalid uint<N> width: ' + size)\n    }\n\n    num = parseNumber(value)\n    if (num.bitLength() > size) {\n      throw new Error('Supplied uint exceeds width: ' + size + ' vs ' + num.bitLength())\n    }\n\n    bitsize = bitsize || size\n    return num.toArrayLike(Buffer, 'be', bitsize / 8)\n  } else if (type.startsWith('int')) {\n    size = parseTypeN(type)\n    if ((size % 8) || (size < 8) || (size > 256)) {\n      throw new Error('Invalid int<N> width: ' + size)\n    }\n\n    num = parseNumber(value)\n    if (num.bitLength() > size) {\n      throw new Error('Supplied int exceeds width: ' + size + ' vs ' + num.bitLength())\n    }\n\n    bitsize = bitsize || size\n    return num.toTwos(size).toArrayLike(Buffer, 'be', bitsize / 8)\n  } else {\n    // FIXME: support all other types\n    throw new Error('Unsupported or invalid type: ' + type)\n  }\n}\n\nABI.solidityPack = function (types, values) {\n  if (types.length !== values.length) {\n    throw new Error('Number of types are not matching the values')\n  }\n\n  var ret = []\n\n  for (var i = 0; i < types.length; i++) {\n    var type = elementaryName(types[i])\n    var value = values[i]\n    ret.push(ABI.solidityHexValue(type, value, null))\n  }\n\n  return Buffer.concat(ret)\n}\n\nABI.soliditySHA3 = function (types, values) {\n  return utils.keccak256(ABI.solidityPack(types, values))\n}\n\nABI.soliditySHA256 = function (types, values) {\n  return utils.sha256(ABI.solidityPack(types, values))\n}\n\nABI.solidityRIPEMD160 = function (types, values) {\n  return utils.ripemd160(ABI.solidityPack(types, values), true)\n}\n\n// Serpent's users are familiar with this encoding\n// - s: string\n// - b: bytes\n// - b<N>: bytes<N>\n// - i: int256\n// - a: int256[]\n\nfunction isNumeric (c) {\n  // FIXME: is this correct? Seems to work\n  return (c >= '0') && (c <= '9')\n}\n\n// For a \"documentation\" refer to https://github.com/ethereum/serpent/blob/develop/preprocess.cpp\nABI.fromSerpent = function (sig) {\n  var ret = []\n  for (var i = 0; i < sig.length; i++) {\n    var type = sig[i]\n    if (type === 's') {\n      ret.push('bytes')\n    } else if (type === 'b') {\n      var tmp = 'bytes'\n      var j = i + 1\n      while ((j < sig.length) && isNumeric(sig[j])) {\n        tmp += sig[j] - '0'\n        j++\n      }\n      i = j - 1\n      ret.push(tmp)\n    } else if (type === 'i') {\n      ret.push('int256')\n    } else if (type === 'a') {\n      ret.push('int256[]')\n    } else {\n      throw new Error('Unsupported or invalid type: ' + type)\n    }\n  }\n  return ret\n}\n\nABI.toSerpent = function (types) {\n  var ret = []\n  for (var i = 0; i < types.length; i++) {\n    var type = types[i]\n    if (type === 'bytes') {\n      ret.push('s')\n    } else if (type.startsWith('bytes')) {\n      ret.push('b' + parseTypeN(type))\n    } else if (type === 'int256') {\n      ret.push('i')\n    } else if (type === 'int256[]') {\n      ret.push('a')\n    } else {\n      throw new Error('Unsupported or invalid type: ' + type)\n    }\n  }\n  return ret.join('')\n}\n\nmodule.exports = ABI\n",null,null,null,null,null,null,null,"'use strict'\nmodule.exports = require('./lib')(require('./lib/elliptic'))\n","'use strict';\n\nvar isHexPrefixed = require('is-hex-prefixed');\nvar stripHexPrefix = require('strip-hex-prefix');\n\n/**\n * Pads a `String` to have an even length\n * @param {String} value\n * @return {String} output\n */\nfunction padToEven(value) {\n  var a = value; // eslint-disable-line\n\n  if (typeof a !== 'string') {\n    throw new Error('[ethjs-util] while padding to even, value must be string, is currently ' + typeof a + ', while padToEven.');\n  }\n\n  if (a.length % 2) {\n    a = '0' + a;\n  }\n\n  return a;\n}\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nfunction intToHex(i) {\n  var hex = i.toString(16); // eslint-disable-line\n\n  return '0x' + hex;\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nfunction intToBuffer(i) {\n  var hex = intToHex(i);\n\n  return new Buffer(padToEven(hex.slice(2)), 'hex');\n}\n\n/**\n * Get the binary size of a string\n * @param {String} str\n * @return {Number}\n */\nfunction getBinarySize(str) {\n  if (typeof str !== 'string') {\n    throw new Error('[ethjs-util] while getting binary size, method getBinarySize requires input \\'str\\' to be type String, got \\'' + typeof str + '\\'.');\n  }\n\n  return Buffer.byteLength(str, 'utf8');\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param {array} superset\n * @param {array} subset\n *\n * @returns {boolean}\n */\nfunction arrayContainsArray(superset, subset, some) {\n  if (Array.isArray(superset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'superset\\' to be an array got type \\'' + typeof superset + '\\'');\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'subset\\' to be an array got type \\'' + typeof subset + '\\'');\n  }\n\n  return subset[Boolean(some) && 'some' || 'every'](function (value) {\n    return superset.indexOf(value) >= 0;\n  });\n}\n\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method toUtf8\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toUtf8(hex) {\n  var bufferValue = new Buffer(padToEven(stripHexPrefix(hex).replace(/^0+|0+$/g, '')), 'hex');\n\n  return bufferValue.toString('utf8');\n}\n\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method toAscii\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toAscii(hex) {\n  var str = ''; // eslint-disable-line\n  var i = 0,\n      l = hex.length; // eslint-disable-line\n\n  if (hex.substring(0, 2) === '0x') {\n    i = 2;\n  }\n\n  for (; i < l; i += 2) {\n    var code = parseInt(hex.substr(i, 2), 16);\n    str += String.fromCharCode(code);\n  }\n\n  return str;\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method fromUtf8\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromUtf8(stringValue) {\n  var str = new Buffer(stringValue, 'utf8');\n\n  return '0x' + padToEven(str.toString('hex')).replace(/^0+|0+$/g, '');\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method fromAscii\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromAscii(stringValue) {\n  var hex = ''; // eslint-disable-line\n  for (var i = 0; i < stringValue.length; i++) {\n    // eslint-disable-line\n    var code = stringValue.charCodeAt(i);\n    var n = code.toString(16);\n    hex += n.length < 2 ? '0' + n : n;\n  }\n\n  return '0x' + hex;\n}\n\n/**\n * getKeys([{a: 1, b: 2}, {a: 3, b: 4}], 'a') => [1, 3]\n *\n * @method getKeys get specific key from inner object array of objects\n * @param {String} params\n * @param {String} key\n * @param {Boolean} allowEmpty\n * @returns {Array} output just a simple array of output keys\n */\nfunction getKeys(params, key, allowEmpty) {\n  if (!Array.isArray(params)) {\n    throw new Error('[ethjs-util] method getKeys expecting type Array as \\'params\\' input, got \\'' + typeof params + '\\'');\n  }\n  if (typeof key !== 'string') {\n    throw new Error('[ethjs-util] method getKeys expecting type String for input \\'key\\' got \\'' + typeof key + '\\'.');\n  }\n\n  var result = []; // eslint-disable-line\n\n  for (var i = 0; i < params.length; i++) {\n    // eslint-disable-line\n    var value = params[i][key]; // eslint-disable-line\n    if (allowEmpty && !value) {\n      value = '';\n    } else if (typeof value !== 'string') {\n      throw new Error('invalid abi');\n    }\n    result.push(value);\n  }\n\n  return result;\n}\n\n/**\n * Is the string a hex string.\n *\n * @method check if string is hex string of specific length\n * @param {String} value\n * @param {Number} length\n * @returns {Boolean} output the string is a hex string\n */\nfunction isHexString(value, length) {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  arrayContainsArray: arrayContainsArray,\n  intToBuffer: intToBuffer,\n  getBinarySize: getBinarySize,\n  isHexPrefixed: isHexPrefixed,\n  stripHexPrefix: stripHexPrefix,\n  padToEven: padToEven,\n  intToHex: intToHex,\n  fromAscii: fromAscii,\n  fromUtf8: fromUtf8,\n  toAscii: toAscii,\n  toUtf8: toUtf8,\n  getKeys: getKeys,\n  isHexString: isHexString\n};",null,"// Reference https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki\n// Format: 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n// NOTE: SIGHASH byte ignored AND restricted, truncate before use\n\nvar Buffer = require('safe-buffer').Buffer\n\nfunction check (buffer) {\n  if (buffer.length < 8) return false\n  if (buffer.length > 72) return false\n  if (buffer[0] !== 0x30) return false\n  if (buffer[1] !== buffer.length - 2) return false\n  if (buffer[2] !== 0x02) return false\n\n  var lenR = buffer[3]\n  if (lenR === 0) return false\n  if (5 + lenR >= buffer.length) return false\n  if (buffer[4 + lenR] !== 0x02) return false\n\n  var lenS = buffer[5 + lenR]\n  if (lenS === 0) return false\n  if ((6 + lenR + lenS) !== buffer.length) return false\n\n  if (buffer[4] & 0x80) return false\n  if (lenR > 1 && (buffer[4] === 0x00) && !(buffer[5] & 0x80)) return false\n\n  if (buffer[lenR + 6] & 0x80) return false\n  if (lenS > 1 && (buffer[lenR + 6] === 0x00) && !(buffer[lenR + 7] & 0x80)) return false\n  return true\n}\n\nfunction decode (buffer) {\n  if (buffer.length < 8) throw new Error('DER sequence length is too short')\n  if (buffer.length > 72) throw new Error('DER sequence length is too long')\n  if (buffer[0] !== 0x30) throw new Error('Expected DER sequence')\n  if (buffer[1] !== buffer.length - 2) throw new Error('DER sequence length is invalid')\n  if (buffer[2] !== 0x02) throw new Error('Expected DER integer')\n\n  var lenR = buffer[3]\n  if (lenR === 0) throw new Error('R length is zero')\n  if (5 + lenR >= buffer.length) throw new Error('R length is too long')\n  if (buffer[4 + lenR] !== 0x02) throw new Error('Expected DER integer (2)')\n\n  var lenS = buffer[5 + lenR]\n  if (lenS === 0) throw new Error('S length is zero')\n  if ((6 + lenR + lenS) !== buffer.length) throw new Error('S length is invalid')\n\n  if (buffer[4] & 0x80) throw new Error('R value is negative')\n  if (lenR > 1 && (buffer[4] === 0x00) && !(buffer[5] & 0x80)) throw new Error('R value excessively padded')\n\n  if (buffer[lenR + 6] & 0x80) throw new Error('S value is negative')\n  if (lenS > 1 && (buffer[lenR + 6] === 0x00) && !(buffer[lenR + 7] & 0x80)) throw new Error('S value excessively padded')\n\n  // non-BIP66 - extract R, S values\n  return {\n    r: buffer.slice(4, 4 + lenR),\n    s: buffer.slice(6 + lenR)\n  }\n}\n\n/*\n * Expects r and s to be positive DER integers.\n *\n * The DER format uses the most significant bit as a sign bit (& 0x80).\n * If the significant bit is set AND the integer is positive, a 0x00 is prepended.\n *\n * Examples:\n *\n *      0 =>     0x00\n *      1 =>     0x01\n *     -1 =>     0xff\n *    127 =>     0x7f\n *   -127 =>     0x81\n *    128 =>   0x0080\n *   -128 =>     0x80\n *    255 =>   0x00ff\n *   -255 =>   0xff01\n *  16300 =>   0x3fac\n * -16300 =>   0xc054\n *  62300 => 0x00f35c\n * -62300 => 0xff0ca4\n*/\nfunction encode (r, s) {\n  var lenR = r.length\n  var lenS = s.length\n  if (lenR === 0) throw new Error('R length is zero')\n  if (lenS === 0) throw new Error('S length is zero')\n  if (lenR > 33) throw new Error('R length is too long')\n  if (lenS > 33) throw new Error('S length is too long')\n  if (r[0] & 0x80) throw new Error('R value is negative')\n  if (s[0] & 0x80) throw new Error('S value is negative')\n  if (lenR > 1 && (r[0] === 0x00) && !(r[1] & 0x80)) throw new Error('R value excessively padded')\n  if (lenS > 1 && (s[0] === 0x00) && !(s[1] & 0x80)) throw new Error('S value excessively padded')\n\n  var signature = Buffer.allocUnsafe(6 + lenR + lenS)\n\n  // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n  signature[0] = 0x30\n  signature[1] = signature.length - 2\n  signature[2] = 0x02\n  signature[3] = r.length\n  r.copy(signature, 4)\n  signature[4 + lenR] = 0x02\n  signature[5 + lenR] = s.length\n  s.copy(signature, 6 + lenR)\n\n  return signature\n}\n\nmodule.exports = {\n  check: check,\n  decode: decode,\n  encode: encode\n}\n","'use strict';\n\nvar isHexPrefixed = require('is-hex-prefixed');\nvar stripHexPrefix = require('strip-hex-prefix');\n\n/**\n * Pads a `String` to have an even length\n * @param {String} value\n * @return {String} output\n */\nfunction padToEven(value) {\n  var a = value; // eslint-disable-line\n\n  if (typeof a !== 'string') {\n    throw new Error('[ethjs-util] while padding to even, value must be string, is currently ' + typeof a + ', while padToEven.');\n  }\n\n  if (a.length % 2) {\n    a = '0' + a;\n  }\n\n  return a;\n}\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nfunction intToHex(i) {\n  var hex = i.toString(16); // eslint-disable-line\n\n  return '0x' + padToEven(hex);\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nfunction intToBuffer(i) {\n  var hex = intToHex(i);\n\n  return Buffer.from(hex.slice(2), 'hex');\n}\n\n/**\n * Get the binary size of a string\n * @param {String} str\n * @return {Number}\n */\nfunction getBinarySize(str) {\n  if (typeof str !== 'string') {\n    throw new Error('[ethjs-util] while getting binary size, method getBinarySize requires input \\'str\\' to be type String, got \\'' + typeof str + '\\'.');\n  }\n\n  return Buffer.byteLength(str, 'utf8');\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param {array} superset\n * @param {array} subset\n *\n * @returns {boolean}\n */\nfunction arrayContainsArray(superset, subset, some) {\n  if (Array.isArray(superset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'superset\\' to be an array got type \\'' + typeof superset + '\\'');\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'subset\\' to be an array got type \\'' + typeof subset + '\\'');\n  }\n\n  return subset[Boolean(some) && 'some' || 'every'](function (value) {\n    return superset.indexOf(value) >= 0;\n  });\n}\n\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method toUtf8\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toUtf8(hex) {\n  var bufferValue = new Buffer(padToEven(stripHexPrefix(hex).replace(/^0+|0+$/g, '')), 'hex');\n\n  return bufferValue.toString('utf8');\n}\n\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method toAscii\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toAscii(hex) {\n  var str = ''; // eslint-disable-line\n  var i = 0,\n      l = hex.length; // eslint-disable-line\n\n  if (hex.substring(0, 2) === '0x') {\n    i = 2;\n  }\n\n  for (; i < l; i += 2) {\n    var code = parseInt(hex.substr(i, 2), 16);\n    str += String.fromCharCode(code);\n  }\n\n  return str;\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method fromUtf8\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromUtf8(stringValue) {\n  var str = new Buffer(stringValue, 'utf8');\n\n  return '0x' + padToEven(str.toString('hex')).replace(/^0+|0+$/g, '');\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method fromAscii\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromAscii(stringValue) {\n  var hex = ''; // eslint-disable-line\n  for (var i = 0; i < stringValue.length; i++) {\n    // eslint-disable-line\n    var code = stringValue.charCodeAt(i);\n    var n = code.toString(16);\n    hex += n.length < 2 ? '0' + n : n;\n  }\n\n  return '0x' + hex;\n}\n\n/**\n * getKeys([{a: 1, b: 2}, {a: 3, b: 4}], 'a') => [1, 3]\n *\n * @method getKeys get specific key from inner object array of objects\n * @param {String} params\n * @param {String} key\n * @param {Boolean} allowEmpty\n * @returns {Array} output just a simple array of output keys\n */\nfunction getKeys(params, key, allowEmpty) {\n  if (!Array.isArray(params)) {\n    throw new Error('[ethjs-util] method getKeys expecting type Array as \\'params\\' input, got \\'' + typeof params + '\\'');\n  }\n  if (typeof key !== 'string') {\n    throw new Error('[ethjs-util] method getKeys expecting type String for input \\'key\\' got \\'' + typeof key + '\\'.');\n  }\n\n  var result = []; // eslint-disable-line\n\n  for (var i = 0; i < params.length; i++) {\n    // eslint-disable-line\n    var value = params[i][key]; // eslint-disable-line\n    if (allowEmpty && !value) {\n      value = '';\n    } else if (typeof value !== 'string') {\n      throw new Error('invalid abi');\n    }\n    result.push(value);\n  }\n\n  return result;\n}\n\n/**\n * Is the string a hex string.\n *\n * @method check if string is hex string of specific length\n * @param {String} value\n * @param {Number} length\n * @returns {Boolean} output the string is a hex string\n */\nfunction isHexString(value, length) {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  arrayContainsArray: arrayContainsArray,\n  intToBuffer: intToBuffer,\n  getBinarySize: getBinarySize,\n  isHexPrefixed: isHexPrefixed,\n  stripHexPrefix: stripHexPrefix,\n  padToEven: padToEven,\n  intToHex: intToHex,\n  fromAscii: fromAscii,\n  fromUtf8: fromUtf8,\n  toAscii: toAscii,\n  toUtf8: toUtf8,\n  getKeys: getKeys,\n  isHexString: isHexString\n};","module.exports = require('./lib/index.js')\n",null,null],"sourceRoot":""}